server {
	listen      8080;
	# TODO: Maybe we can just use $hostname instead
	server_name DOCKER_FLOW_SERVERNAME;

	charset utf-8;

	root  /var/www/Web/;
	index index.html index.php;

	# Disable .htaccess and other hidden files
	location ~ /\. {
		access_log    off;
		log_not_found off;
		deny          all;
	}

	# No need to log access to robots and favicon
	location = /favicon.ico {
		log_not_found off;
		access_log    off;
	}

	location = /robots.txt {
		allow         all;
		log_not_found off;
		access_log    off;
	}

	location ~ "^/_Resources/Persistent/" {
		access_log off;
		try_files  $uri @neos12AndBefore;
	}

	# Backward compatibility: these are rewrite rules needed for Neos 1.2 and before
	location @neos12AndBefore {
		rewrite "(.{40})/.+\.(.+)"                        /_Resources/Persistent/$1.$2 break;
		rewrite "([a-z0-9]+/(.+/)?[a-f0-9]{40})/.+\.(.+)" /_Resources/Persistent/$1.$2 break;
	}

	# Block access to the main resources folder
	location ~ "^/_Resources/" {
		access_log    off;
		log_not_found off;
		expires       max;
		break;
	}

	# Stop rewriting by existing files | is instead of -> location / { rewrite ".*" /index.php last; }
	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	# Pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	location ~ \.php$ {
		include       /etc/nginx/fastcgi_params;
		try_files     $uri =404;
		fastcgi_pass  app:9000;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO        $fastcgi_path_info;
		fastcgi_param FLOW_CONTEXT     DOCKER_FLOW_CONTEXT;
		fastcgi_param FLOW_REWRITEURLS 1;
		fastcgi_param X-Forwarded-For  $proxy_add_x_forwarded_for;
		fastcgi_param X-Forwarded-Port $proxy_port;
		fastcgi_param REMOTE_ADDR      $remote_addr;
		fastcgi_param REMOTE_PORT      $remote_port;
		fastcgi_param SERVER_ADDR      $server_addr;
		fastcgi_param SERVER_NAME      $http_host;
		fastcgi_split_path_info        ^(.+\.php)(.*)$;
		fastcgi_read_timeout           300;
		fastcgi_buffer_size            128k;
		fastcgi_buffers                256 16k;
		fastcgi_busy_buffers_size      256k;
		fastcgi_temp_file_write_size   256k;
	}
}

